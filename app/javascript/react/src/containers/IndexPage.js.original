import React, {Component} from 'react';

class IndexPage extends Component {
  constructor(props){
    super(props)
    this.state = {
      binaryURL: ''
    }
    this.readFile = this.readFile.bind(this);
    this.sendDataToAPI = this.sendDataToAPI.bind(this);
  }

  // componentDidMount(){
  //   // place a get/fetch call here to get all the images as well as the current_user id
  // }

  readFile(selectorFiles: FileList) {

    if (selectorFiles && selectorFiles[0]) {

      let FR = new FileReader();
      let that = this

      FR.addEventListener("load", function(e) {
        // document.getElementById("b64").innerHTML = e.target.result;
        // that.setState({binaryURL: e.target.result})

        // that.sendDataToAPI(e.target.result)

        let file = dataURLtoBlob(e.target.result)

        let fd = new FormData();
        fd.append("image", file, 'photo.jpg')
        that.sendDataToAPI(fd)

      });

      FR.readAsDataURL( selectorFiles[0] )


      function dataURLtoBlob(dataURL) {
        let binary = atob(dataURL.split(',')[1]);
        let array = [];
        for (let i = 0; i < binary.length; i++) {
          array.push(binary.charCodeAt(i));
        }

        return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});

      }

    }
  }

  sendDataToAPI(binaryDataURL){
    console.log(binaryDataURL)
    fetch(`/api/v1/users/${1}/images`, {
      credentials: 'same-origin',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      method: 'POST',
      // body: JSON.stringify({ image: binaryDataURL })
      body: binaryDataURL
    })
    .then(response => {
      if (response.ok) {
        return response;
      } else {
        let errorMessage = `${response.status} (${response.statusText})`,
        error = new Error(errorMessage);
        throw(error);
      }
    })
    .then(response => response.json())
    .then(body =>{
      that.setState({binaryURL: e.target.result})
    })
    .catch(error => console.error(`Error in fetch: ${error.message}`));
  }



  render() {

    return(
      <div>
        <h1>Index page</h1>
        <input id="inp" type='file' onChange={(e) => this.readFile(e.target.files)}/>
        <p id="b64">{this.state.binaryURL}</p>
      </div>
    )
  }
}

export default IndexPage
